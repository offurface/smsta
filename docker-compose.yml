version: "3.7"

services:
  db:
    image: postgres:12.0-alpine
    volumes:
      - pg-data:/var/lib/postgresql/data/
    restart: always
    environment:
      POSTGRES_DB: ${DOCKER_DB_NAME}
      POSTGRES_USER: ${DOCKER_DB_USER}
      POSTGRES_PASSWORD: ${DOCKER_DB_PASSWORD}
  app:
    build: .
    command: sh -c "
      poetry run task collectstatic --clear &&
      poetry run task migrate &&
      poetry run task gunicorn"
    volumes:
      - static:/var/www/app/public/static
      - media:/var/www/app/public/media
      - logs:/var/www/app/public/logs
      - ./.env:/var/www/app/.env
    depends_on:
      - db
  nginx:
    image: nginx:1.17.6-alpine
    volumes:
      - static:/var/www/app/public/static
      - media:/var/www/app/public/media
      - logs:/var/www/app/public/logs
      - ./.config/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./.config/robots.txt:/var/www/app/public/robots.txt/
    ports:
      - 8080:80
    depends_on:
      - app

volumes:
  static:
    driver: local
    driver_opts:
      type: none
      device: "$PWD/${DOCKER_STATIC_DIR}"
      o: bind
  media:
    driver: local
    driver_opts:
      type: none
      device: "$PWD/${DOCKER_MEDIA_DIR}"
      o: bind
  pg-data:
    driver: local
    driver_opts:
      type: none
      device: "$PWD/${DOCKER_DB_DIR}"
      o: bind
  logs:
    driver: local
    driver_opts:
      type: none
      device: "$PWD/${DOCKER_LOG_DIR}"
      o: bind
